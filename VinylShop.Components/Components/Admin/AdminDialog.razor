@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3 mb-n1" />
            Delete server?
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField Value="@Album.AlbumId" Label="Album Id" ReadOnly="false" />
        <MudTextField Value="@Album.Name" Label="Album name" ReadOnly="false" />
        <MudTextField Value="@Album.Description" Label="Description" ReadOnly="false" />
        <MudTextField Value="@Album.Image" Label="Image" ReadOnly="false" />
        <MudImage Fluid="true" Src="@Album.Image" Alt="Swedish Farm House" Class="rounded-lg" />
        <MudTextField Value="@Album.AuthorName" Label="Author name" ReadOnly="false" />
        <MudTextField Value="@Album.TimeInMinutes" Label="Time in minutes" ReadOnly="false" />
        <MudTextField Value="@Album.Raiting" Label="Rating" ReadOnly="false" />

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="DeleteServer">Edit data</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Album Album { get; set; } = new Album();

    private void Cancel() => MudDialog.Cancel();

    private void DeleteServer()
    {
        //In a real world scenario this bool would probably be a service to delete the item from api/database
        Snackbar.Add("Data edited", Severity.Success);
        MudDialog.Close(DialogResult.Ok(Album.AlbumId));
    }
}
