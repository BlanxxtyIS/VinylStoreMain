@page "/"
@inject HttpClient Http
@inject ISnackbar Snackbar

<PageTitle>Vinyl Store</PageTitle>

<h1>Hello, buyer!</h1>

Welcome to vinyl shop.

@if (_albums == null)
{
    <p>Loading trails...</p>
} else {
    <AlbumDetails Album="_selectedAlbum" />
    <AlbumSearch />

    <div class="grid">
        @foreach (var album in _albums)
        {
            <AlbumCard Album="album" OnSelected="HandleAlbumSelected" />
        }
    </div>
}

@code {
    private IEnumerable<Album>? _albums;
    private Album? _selectedAlbum;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // _albums = await Http.GetFromJsonAsync<IEnumerable<Album>>("albums/album-data.json");
            _albums = await Http.GetFromJsonAsync<IEnumerable<Album>>("api/albumIteration/getAlbums");

            ;
            if (_albums != null)
            {
                foreach (var album in _albums)
                {
                    try
                    {
                        // Используем путь из ImageType для загрузки изображения
                        var imageBytes = await Http.GetByteArrayAsync(album.ImageType);
                        album.ImageData = imageBytes;
                        album.ImageType = "image/jpeg"; // Устанавливаем MIME-тип
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine($"Error loading image for album {album.Name}: {ex.Message}");
                    }
                }
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was as problem loading albums data: {ex.Message}");
        }
    }

    private void HandleAlbumSelected(Album album) => _selectedAlbum = album;
}